name: Release Desktop App

on:
  push:
    tags:
      - 'v*.*.*'
  workflow_dispatch:
    inputs:
      version:
        description: 'Version to release (e.g., v1.0.0)'
        required: true
        type: string

jobs:
  release:
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        os: [windows-latest, macos-latest, ubuntu-latest]

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Build desktop app
        run: |
          cd apps/desktop
          npm ci
          npm run electron:build
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Upload Windows artifacts
        if: matrix.os == 'windows-latest'
        uses: actions/upload-artifact@v4
        with:
          name: windows-installer
          path: apps/desktop/dist/*.exe

      - name: Upload macOS artifacts
        if: matrix.os == 'macos-latest'
        uses: actions/upload-artifact@v4
        with:
          name: macos-installer
          path: apps/desktop/dist/*.dmg

      - name: Upload Linux artifacts
        if: matrix.os == 'ubuntu-latest'
        uses: actions/upload-artifact@v4
        with:
          name: linux-installer
          path: |
            apps/desktop/dist/*.AppImage
            apps/desktop/dist/*.deb

  publish-release:
    needs: release
    runs-on: ubuntu-latest
    permissions:
      contents: write

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Download all artifacts
        uses: actions/download-artifact@v4
        with:
          path: artifacts

      - name: Display structure of downloaded files
        run: ls -R artifacts

      - name: Create Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ github.ref_name || inputs.version }}
          name: Release ${{ github.ref_name || inputs.version }}
          draft: false
          prerelease: false
          files: |
            artifacts/windows-installer/*.exe
            artifacts/macos-installer/*.dmg
            artifacts/linux-installer/*.AppImage
            artifacts/linux-installer/*.deb
          body: |
            ## Downloads

            ### Windows
            - Download `Noti-Setup-*.exe` and run the installer

            ### macOS
            - Download `Noti-*.dmg`, open it, and drag Noti to Applications

            ### Linux
            - **AppImage**: Download `Noti-*.AppImage`, make it executable (`chmod +x`), and run it
            - **Debian/Ubuntu**: Download `noti_*.deb` and install with `sudo dpkg -i noti_*.deb`

            ## What's New

            See the commits since the last release for details.
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
